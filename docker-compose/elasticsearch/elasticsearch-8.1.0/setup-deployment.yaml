apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.24.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: setup
  name: setup
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: setup
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.24.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: setup
    spec:
      containers:
        - args:
            - bash
            - -c
            - |2

                if [ xliuchao123456 == x ]; then
                  echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
                  exit 1;
                elif [ xliuchao123456 == x ]; then
                  echo "Set the KIBANA_PASSWORD environment variable in the .env file";
                  exit 1;
                fi;
                if [ ! -f certs/ca.zip ]; then
                  echo "Creating CA";
                  bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
                  unzip config/certs/ca.zip -d config/certs;
                fi;
                if [ ! -f certs/certs.zip ]; then
                  echo "Creating certs";
                  echo -ne \
                  "instances:\n"\
                  "  - name: es01\n"\
                  "    dns:\n"\
                  "      - es01\n"\
                  "      - localhost\n"\
                  "    ip:\n"\
                  "      - 127.0.0.1\n"\
                  "  - name: es02\n"\
                  "    dns:\n"\
                  "      - es02\n"\
                  "      - localhost\n"\
                  "    ip:\n"\
                  "      - 127.0.0.1\n"\
                  "  - name: es03\n"\
                  "    dns:\n"\
                  "      - es03\n"\
                  "      - localhost\n"\
                  "    ip:\n"\
                  "      - 127.0.0.1\n"\
                  > config/certs/instances.yml;
                  bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
                  unzip config/certs/certs.zip -d config/certs;
                fi;
                echo "Setting file permissions"
                chown -R root:root config/certs;
                find . -type d -exec chmod 750 \{\} \;;
                find . -type f -exec chmod 640 \{\} \;;
                echo "Waiting for Elasticsearch availability";
                until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
                echo "Setting kibana_system password";
                until curl -s -X POST --cacert config/certs/ca/ca.crt -u elastic:liuchao123456 -H "Content-Type: application/json" https://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"liuchao123456\"}" | grep -q "^{}"; do sleep 10; done;
                echo "All done!";
          image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
          name: setup
          resources: {}
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/config/certs
              name: certs
      restartPolicy: Always
      volumes:
        - name: certs
          persistentVolumeClaim:
            claimName: certs
status: {}
